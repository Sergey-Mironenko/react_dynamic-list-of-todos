{"version":3,"sources":["types/FilterStatus.ts","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","index.tsx"],"names":["FilterStatus","TodoList","todos","selectedTodoId","changeTodo","changeUser","className","map","todo","classNames","id","completed","title","type","onClick","userId","Loader","TodoModal","selectedUser","loadUser","resetUser","selectedTodo","find","useMemo","href","email","name","TodoFilter","query","filter","handleChange","handleReset","handleFilterChange","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","App","state","user","all","selectedUserId","a","api","setState","this","lowQuery","toLowerCase","trim","visibleTodos","todoId","active","toLocaleLowerCase","includes","event","target","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7266908.chunk.js","sourcesContent":["export enum FilterStatus {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number | null,\n  changeTodo(todoId: number | null): void,\n  changeUser(todoId: number | null): void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectedTodoId,\n    changeTodo,\n    changeUser,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodoId === todo.id },\n            )}\n            key={todo.title}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    changeTodo(null);\n                    changeUser(null);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    changeTodo(todo.id);\n                    changeUser(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </>\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useMemo } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  selectedUser: User | null,\n  selectedTodoId: number | null,\n  changeTodo(todoId: number | null): void,\n  changeUser(todoId: number | null): void,\n  loadUser(): void,\n  resetUser(): void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    todos,\n    selectedUser,\n    selectedTodoId,\n    changeTodo,\n    changeUser,\n    loadUser,\n    resetUser,\n  },\n) => {\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useMemo(() => {\n    loadUser();\n  }, [selectedUser]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                changeTodo(null);\n                changeUser(null);\n                resetUser();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  query: string,\n  filter: FilterStatus,\n  handleChange(event: ChangeEvent<HTMLInputElement>): void,\n  handleReset(): void,\n  handleFilterChange(event: ChangeEvent<HTMLSelectElement>): void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    filter,\n    handleChange,\n    handleReset,\n    handleFilterChange,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={handleFilterChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={handleChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query !== '' && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleReset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(3000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { ChangeEvent } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { FilterStatus } from './types/FilterStatus';\nimport { TodoFilter } from './components/TodoFilter';\nimport * as api from './api';\n\ntype State = {\n  todos: Todo[],\n  user: User | null,\n  query: string,\n  filter: FilterStatus,\n  selectedTodoId: number | null,\n  selectedUserId: number | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    todos: [],\n    user: null,\n    query: '',\n    filter: FilterStatus.all,\n    selectedTodoId: null,\n    selectedUserId: null,\n  };\n\n  async componentDidMount() {\n    const todos = await api.getTodos();\n\n    this.setState({ todos });\n  }\n\n  loadUser = async () => {\n    if (this.state.selectedUserId !== null) {\n      // eslint-disable-next-line\n      const user = await api.getUser(this.state.selectedUserId);\n\n      this.setState({ user });\n    }\n  };\n\n  render() {\n    const {\n      todos,\n      user,\n      query,\n      filter,\n      selectedTodoId,\n      selectedUserId,\n    } = this.state;\n    const lowQuery = query.toLowerCase().trim();\n    let visibleTodos = [...todos];\n\n    const handleChangeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n      return this.setState({ query: event.target.value });\n    };\n\n    const handleQueryReset = () => {\n      return this.setState({ query: '' });\n    };\n\n    const handleFilterChange = (event: ChangeEvent<HTMLSelectElement>) => {\n      return this.setState({ filter: event.target.value as FilterStatus });\n    };\n\n    const changeTodo = (todoId: number | null) => {\n      this.setState({ selectedTodoId: todoId });\n    };\n\n    const changeUser = (userId: number | null) => {\n      this.setState({ selectedUserId: userId });\n    };\n\n    const resetUser = () => {\n      this.setState({ user: null });\n    };\n\n    if (query[0] === ' ') {\n      this.setState({ query: '' });\n    }\n\n    if (filter === FilterStatus.active) {\n      visibleTodos = todos.filter(\n        (todo: Todo) => todo.completed === false,\n      );\n    }\n\n    if (filter === FilterStatus.completed) {\n      visibleTodos = todos.filter(\n        (todo: Todo) => todo.completed === true,\n      );\n    }\n\n    visibleTodos = visibleTodos.filter(\n      (todo: Todo) => todo.title.toLocaleLowerCase().includes(lowQuery),\n    );\n\n    return (\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                handleChange={handleChangeQuery}\n                handleReset={handleQueryReset}\n                handleFilterChange={handleFilterChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodoId}\n                  changeTodo={changeTodo}\n                  changeUser={changeUser}\n                />\n              )}\n            </div>\n          </div>\n          {selectedUserId && (\n            <TodoModal\n              todos={visibleTodos}\n              selectedUser={user}\n              selectedTodoId={selectedTodoId}\n              changeTodo={changeTodo}\n              changeUser={changeUser}\n              loadUser={this.loadUser}\n              resetUser={resetUser}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}